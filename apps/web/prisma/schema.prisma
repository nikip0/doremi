generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  reviews   Review[]
  follows Follow[] @relation("Following")
  followers Follow[] @relation("Followers")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id        String   @id @default(uuid())
  name      String
  albums    Album[]
  tracks    Track[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Album {
  id        String   @id @default(uuid())
  title     String
  artist    Artist   @relation(fields: [artistId], references: [id])
  artistId  String
  tracks    Track[]
  reviews   Review[]
  releaseDate DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Track {
  id        String   @id @default(uuid())
  title     String
  album     Album    @relation(fields: [albumId], references: [id])
  albumId   String
  artist    Artist   @relation(fields: [artistId], references: [id])
  artistId  String
  reviews   Review[]
  duration  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  album     Album?   @relation(fields: [albumId], references: [id])
  albumId   String?
  track     Track?   @relation(fields: [trackId], references: [id])
  trackId   String?
  rating    Int
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follow {
  id         String   @id @default(uuid())
  follower   User     @relation("Following", fields: [followerId], references: [id])
  followerId String
  following  User     @relation("Followers", fields: [followingId], references: [id])
  followingId String
  createdAt  DateTime @default(now())

  @@unique([followerId, followingId])
}